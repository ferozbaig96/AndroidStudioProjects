//--------------------------Using Anonymous class--------------------------
// Make an interface InterfaceFunction.java and paste

public interface InterfaceFunction {
    void f();
}

--------------------------

// Make a class PostLollipopPermissions.java and paste 

public class PostLollipopPermissons {

    static void askPermission(Context context, Activity mActivity, InterfaceFunction interfaceFunction, String mPermission, String requestMessage, int requestCode) {

        int permissionCheck = ContextCompat.checkSelfPermission(context, mPermission);
        if (permissionCheck == PackageManager.PERMISSION_DENIED) {

            if (ActivityCompat.shouldShowRequestPermissionRationale(mActivity, mPermission))
                Toast.makeText(context, requestMessage, Toast.LENGTH_LONG).show();

            ActivityCompat.requestPermissions(mActivity, new String[]{mPermission},
                    requestCode);
        } else {
            interfaceFunction.f();
        }
    }

 /*       android.support.v4.app.Fragment     */

    static void askPermissionInFragment(Context context, Fragment mFragment, InterfaceFunction interfaceFunction, String mPermission, String requestMessage, int requestCode) {

        int permissionCheck = ContextCompat.checkSelfPermission(context, mPermission);
        if (permissionCheck == PackageManager.PERMISSION_DENIED) {

            if (mFragment.shouldShowRequestPermissionRationale(mPermission))
                Toast.makeText(context, requestMessage, Toast.LENGTH_LONG).show();

            mFragment.requestPermissions(new String[]{mPermission},
                    requestCode);
        } else {
            interfaceFunction.f();
        }
    }
}

--------------------------

// Inside your Activity, ask for Permissions using PostLollipopPermissions.java

    InterfaceFunction interfaceFunction;
	
    void permissionWriteExternalStorage() {
        interfaceFunction = new InterfaceFunction() {
            @Override
            public void f() {
                //TODO call my desired functiton
                captureImage();			//my desired function
            }
        };

        PostLollipopPermissons.askPermission(this, this, interfaceFunction, Manifest.permission.WRITE_EXTERNAL_STORAGE,
                "We require this permission to save clicked photos to your device internal memory",
                MY_PERMISSIONS_REQUEST_WRITE_EXTERNAL_STORAGE);
    }

// Inside your Activity, check whether permission is granted or not

 @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        switch (requestCode) {
            case MY_PERMISSIONS_REQUEST_WRITE_EXTERNAL_STORAGE: {
                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    captureImage(); 		//my desired function
                } else {
                    Toast.makeText(ImageActivity.this, "Change your Settings to allow this app to access storage", Toast.LENGTH_SHORT).show();
                    finish();
                }
            }
            break;

        }
    }

 /*       android.support.v4.app.Fragment     */

    static void askPermissionInFragment(Context context, Fragment mFragment, InterfaceFunction interfaceFunction, String mPermission, String requestMessage, int requestCode) {

        int permissionCheck = ContextCompat.checkSelfPermission(context, mPermission);
        if (permissionCheck == PackageManager.PERMISSION_DENIED) {

            if (mFragment.shouldShowRequestPermissionRationale(mPermission))
                Toast.makeText(context, requestMessage, Toast.LENGTH_LONG).show();

            mFragment.requestPermissions(new String[]{mPermission},
                    requestCode);
        } else {
            interfaceFunction.f();
        }
    }

--------------------------Without using Anonymous class--------------------------

// Inside the same activity, paste the following

// Ask for permission
    void permissionWriteExternalStorage() {

        int permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);
        if (permissionCheck == PackageManager.PERMISSION_DENIED) {

            if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.WRITE_EXTERNAL_STORAGE))
                Toast.makeText(ImageActivity.this, "We require this permission to save clicked photos to your device internal memory.", Toast.LENGTH_LONG).show();

            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
                    MY_PERMISSIONS_REQUEST_WRITE_EXTERNAL_STORAGE);
        } else
            captureImage(); 		//my desired function
    }


// Check whether permission is granted or not (same as the code above)

